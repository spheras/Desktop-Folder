First time build
·················
$ meson build
$ cd build
$ ninja

Build, install and run the app with debug messages in one line
..............................................................
$ sudo ninja install && env G_MESSAGES_DEBUG=all com.github.spheras.desktopfolder


Automatic elementary code style guidelines
··········································
Build and install uncrustify, then go to src/ and run uncrustify like this:
$ uncrustify --replace --no-backup -c ../etc/uncrustify-elementary-vala.cfg */*.vala *.vala

Make sure you don't end comment lines with a \ (backslash), otherwise
uncrustify turns the next line into a comment as well:

    // This prints a \
    my_function ();

Gets turned into:

    // This prints a
    // my_function ();

It's okay if you put any character after it though:

    // This prints a \ character.
    // (or) This prints a \.
    my_function ();


Show debug messages
···················
$ export G_MESSAGES_DEBUG=all


Generate pot file
·················
$ ninja com.github.spheras.desktopfolder-pot


Debian build
············
From root directory:
$ debuild -uc -us

(Hint) To execute rules:
$ ./debian/rules install


GTK Introspector
················
$ gsettings set org.gtk.Settings.Debug enable-inspector-keybinding true

After that, press Ctrl+Shift+D or Ctrl+Shift+I on the window you want to debug.


Snap creation
·············
$ sudo apt install snapcraft

$ sudo docker pull snapcore/snapcraft
$ sudo docker run -v $PWD:$PWD -w $PWD snapcore/snapcraft snapcraft
